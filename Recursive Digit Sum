// problem link https://www.hackerrank.com/challenges/recursive-digit-sum/problem 

/*solution*/
/***************************************************
*  Author:
*
*         ██████|  /███\  |█   █|  █████\
*         █|       █   █  |█   █|  █    ██\
*         ██████|  █████   █████   █    ███|
*         █|       █   █  |█   █|  █    ██/
*         █|       █   █  |█   █|  █████/
*
***************************************************/
#include<bits/stdc++.h>
#define int long long
#define FAST ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define double long double
#define all(v)  v.begin(),v.end()
#define FAST ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);
#define ll endl
#define forr(i , n) for(int i = 0 ; i < n ; i++)
#define forr1(i , n) for(int i = 1 ; i <= n ; i++)
#define pi pair<int,int>
#define pis     priority_queue<pi, vector<pi>, greater<pi> > s;
#define pig     priority_queue<pi>g;
#define pas     priority_queue<int, vector<int>, greater<int> > s;
#define pag     priority_queue<int>g;
#define vpi vector<pair<int,int>>
#define YES cout <<"YES"<<ll;
#define NO cout <<"NO"<<ll;
#define Yes cout <<"Yes"<<ll;
#define No cout <<"No"<<ll;
#define yes cout <<"yes"<<ll;
#define no cout <<"no"<<ll;
using namespace std;
int sum = 0;
int rec(int x){
  //  cout <<x<<ll;
    if(x == 0) return 0;
    else  {
        return  sum = (x % 10) + rec(x/10);
    }
}
void solve()
{
    string  s , ss;
    int k;
    cin >>s >> k;
    int x = 0;
    for(int i = 0 ; i < s.size() ; i++){
        x+=s[i] -'0';
    }
    rec(x*k);
    while (sum > 10) rec(sum);
    cout <<sum<<ll;

}
int32_t main() {
    FAST;
    int t = 1;
    for(int i = 1 ;i<= t;i++) solve();
    return 0;
}
